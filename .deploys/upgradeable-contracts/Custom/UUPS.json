{
  "id": 80001,
  "network": "Custom",
  "deployments": {
    "0x30a1A545857DF990A54bD6395E8b0D880F943f21": {
      "date": "2023-01-29T05:13:38.931Z",
      "contractName": "MiPrimerNft",
      "fork": "london",
      "implementationAddress": "0xf39Bd1D8F8c5c56BfA9bB039a68dDe1427E71304",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2685,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 2964,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1258,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage"
          },
          {
            "astId": 1260,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage"
          },
          {
            "astId": 1264,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1268,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1272,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1278,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 2198,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage"
          },
          {
            "astId": 1123,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool"
          },
          {
            "astId": 1228,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 39,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3964,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "ipfsCID",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contracts/NFT.sol:MiPrimerNft",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contracts/NFT.sol:MiPrimerNft",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0x5705e7D3EBCd5E4817e527da62487de6d5C11aB5": {
      "date": "2023-01-29T12:30:38.868Z",
      "contractName": "MiPrimerNft",
      "fork": "london",
      "implementationAddress": "0xEaE550f6AC8E803E13C3C58D0E0B78A837A0f570",
      "layout": {
        "storage": [
          {
            "astId": 804,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 807,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2685,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 2964,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1258,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage"
          },
          {
            "astId": 1260,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage"
          },
          {
            "astId": 1264,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1268,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1272,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)"
          },
          {
            "astId": 1278,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
          },
          {
            "astId": 2198,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage"
          },
          {
            "astId": 1123,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool"
          },
          {
            "astId": 1228,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 39,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)"
          },
          {
            "astId": 334,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage"
          },
          {
            "astId": 786,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 1101,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage"
          },
          {
            "astId": 3964,
            "contract": "contracts/NFT.sol:MiPrimerNft",
            "label": "ipfsCID",
            "offset": 0,
            "slot": "351",
            "type": "t_string_storage"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "base": "t_uint256",
            "encoding": "inplace",
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "encoding": "inplace",
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "encoding": "mapping",
            "key": "t_bytes32",
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32",
            "value": "t_struct(RoleData)34_storage"
          },
          "t_mapping(t_uint256,t_address)": {
            "encoding": "mapping",
            "key": "t_uint256",
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32",
            "value": "t_address"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "encoding": "inplace",
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "astId": 31,
                "contract": "contracts/NFT.sol:MiPrimerNft",
                "label": "members",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 33,
                "contract": "contracts/NFT.sol:MiPrimerNft",
                "label": "adminRole",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}